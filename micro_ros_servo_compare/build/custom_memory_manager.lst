ARM GAS  /tmp/cc43EOx7.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"custom_memory_manager.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvHeapInit,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	prvHeapInit:
  26              	.LFB12:
  27              		.file 1 "micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c"
   1:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*
   2:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  * A custom implementation of pvPortMallocMicroROS() and vPortFreeMicroROS() with realloc and
   3:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  * calloc features based on FreeRTOS heap4.c.
   4:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  */
   5:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  
   6:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #include <stdlib.h>
   7:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #include <string.h>
   8:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
   9:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  10:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** all the API functions to use the MPU wrappers.  That should only be done when
  11:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** task.h is included from an application file. */
  12:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  13:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  14:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #include "FreeRTOS.h"
  15:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #include "task.h"
  16:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  17:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  18:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  19:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 0 )
  20:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	#error This file must not be used if configSUPPORT_DYNAMIC_ALLOCATION is 0
  21:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #endif
  22:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  23:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* Block sizes must not get too small. */
  24:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #define heapMINIMUM_BLOCK_SIZE	( ( size_t ) ( xHeapStructSize << 1 ) )
  25:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  26:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* Assumes 8bit bytes! */
  27:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #define heapBITS_PER_BYTE		( ( size_t ) 8 )
  28:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  29:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* Allocate the memory for the heap. */
  30:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];
  31:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
ARM GAS  /tmp/cc43EOx7.s 			page 2


  32:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* Define the linked list structure.  This is used to link free blocks in order
  33:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** of their memory address. */
  34:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** typedef struct A_BLOCK_LINK
  35:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
  36:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	struct A_BLOCK_LINK *pxNextFreeBlock;	/*<< The next free block in the list. */
  37:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	size_t xBlockSize;						/*<< The size of the free block. */
  38:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** } BlockLink_t;
  39:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  40:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
  41:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  42:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*
  43:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  * Inserts a block of memory that is being freed into the correct position in
  44:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  * the list of free memory blocks.  The block being freed will be merged with
  45:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  * the block in front it and/or the block behind it if the memory blocks are
  46:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  * adjacent to each other.
  47:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  */
  48:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert );
  49:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  50:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*
  51:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  * Called automatically to setup the required heap structures the first time
  52:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  * pvPortMallocMicroROS() is called.
  53:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  */
  54:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static void prvHeapInit( void );
  55:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  56:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
  57:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  58:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* The size of the structure placed at the beginning of each allocated memory
  59:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** block must by correctly byte aligned. */
  60:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static const size_t xHeapStructSize	= ( sizeof( BlockLink_t ) + ( ( size_t ) ( portBYTE_ALIGNMENT -
  61:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  62:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* Create a couple of list links to mark the start and end of the list. */
  63:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static BlockLink_t xStart, *pxEnd = NULL;
  64:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  65:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* Keeps track of the number of free bytes remaining, but says nothing about
  66:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** fragmentation. */
  67:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static size_t xFreeBytesRemaining = 0U;
  68:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static size_t xMinimumEverFreeBytesRemaining = 0U;
  69:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  70:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* Gets set to the top bit of an size_t type.  When this bit in the xBlockSize
  71:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** member of an BlockLink_t structure is set then the block belongs to the
  72:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** application.  When the bit is free the block is still part of the free heap
  73:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** space. */
  74:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static size_t xBlockAllocatedBit = 0;
  75:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  76:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
  77:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  78:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** void *pvPortMallocMicroROS( size_t xWantedSize )
  79:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
  80:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
  81:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** void *pvReturn = NULL;
  82:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  83:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	vTaskSuspendAll();
  84:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
  85:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		/* If this is the first call to malloc then the heap will require
  86:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		initialisation to setup the list of free blocks. */
  87:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if( pxEnd == NULL )
  88:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
ARM GAS  /tmp/cc43EOx7.s 			page 3


  89:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			prvHeapInit();
  90:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
  91:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		else
  92:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
  93:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			mtCOVERAGE_TEST_MARKER();
  94:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
  95:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  96:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		/* Check the requested block size is not so large that the top bit is
  97:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		set.  The top bit of the block size member of the BlockLink_t structure
  98:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		is used to determine who owns the block - the application or the
  99:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		kernel, so it must be free. */
 100:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 101:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 102:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			/* The wanted size is increased so it can contain a BlockLink_t
 103:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			structure in addition to the requested amount of bytes. */
 104:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			if( xWantedSize > 0 )
 105:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 106:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				xWantedSize += xHeapStructSize;
 107:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 108:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				/* Ensure that blocks are always aligned to the required number
 109:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				of bytes. */
 110:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 111:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 112:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					/* Byte alignment required. */
 113:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 114:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					configASSERT( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) == 0 );
 115:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 116:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				else
 117:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 118:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					mtCOVERAGE_TEST_MARKER();
 119:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 120:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 121:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			else
 122:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 123:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				mtCOVERAGE_TEST_MARKER();
 124:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 125:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 126:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 127:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 128:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				/* Traverse the list from the start	(lowest address) block until
 129:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				one	of adequate size is found. */
 130:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				pxPreviousBlock = &xStart;
 131:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				pxBlock = xStart.pxNextFreeBlock;
 132:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 133:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 134:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pxPreviousBlock = pxBlock;
 135:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pxBlock = pxBlock->pxNextFreeBlock;
 136:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 137:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 138:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				/* If the end marker was reached then a block of adequate size
 139:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				was	not found. */
 140:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				if( pxBlock != pxEnd )
 141:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 142:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					/* Return the memory space pointed to - jumping over the
 143:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					BlockLink_t structure at its start. */
 144:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize )
 145:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
ARM GAS  /tmp/cc43EOx7.s 			page 4


 146:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					/* This block is being returned for use so must be taken out
 147:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					of the list of free blocks. */
 148:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 149:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 150:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					/* If the block is larger than required it can be split into
 151:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					two. */
 152:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 153:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 154:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						/* This block is to be split into two.  Create a new
 155:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						block following the number of bytes requested. The void
 156:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						cast is used to prevent byte alignment warnings from the
 157:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						compiler. */
 158:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 159:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 160:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 161:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						/* Calculate the sizes of two blocks split from the
 162:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						single block. */
 163:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 164:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						pxBlock->xBlockSize = xWantedSize;
 165:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 166:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						/* Insert the new block into the list of free blocks. */
 167:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						prvInsertBlockIntoFreeList( pxNewBlockLink );
 168:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 169:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					else
 170:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 171:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						mtCOVERAGE_TEST_MARKER();
 172:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 173:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 174:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					xFreeBytesRemaining -= pxBlock->xBlockSize;
 175:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 176:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 177:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 178:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 179:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 180:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					else
 181:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 182:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						mtCOVERAGE_TEST_MARKER();
 183:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 184:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 185:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					/* The block is being returned - it is allocated and owned
 186:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					by the application and has no "next" block. */
 187:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pxBlock->xBlockSize |= xBlockAllocatedBit;
 188:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pxBlock->pxNextFreeBlock = NULL;
 189:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 190:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				else
 191:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 192:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					mtCOVERAGE_TEST_MARKER();
 193:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 194:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 195:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			else
 196:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 197:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				mtCOVERAGE_TEST_MARKER();
 198:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 199:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 200:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		else
 201:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 202:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/cc43EOx7.s 			page 5


 203:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 204:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 205:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		traceMALLOC( pvReturn, xWantedSize );
 206:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 207:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	( void ) xTaskResumeAll();
 208:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 209:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
 210:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 211:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if( pvReturn == NULL )
 212:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 213:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			extern void vApplicationMallocFailedHook( void );
 214:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			vApplicationMallocFailedHook();
 215:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 216:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		else
 217:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 218:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			mtCOVERAGE_TEST_MARKER();
 219:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 220:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 221:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	#endif
 222:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 223:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 224:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return pvReturn;
 225:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 226:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 227:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 228:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** void vPortFreeMicroROS( void *pv )
 229:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
 230:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** uint8_t *puc = ( uint8_t * ) pv;
 231:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** BlockLink_t *pxLink;
 232:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 233:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	if( pv != NULL )
 234:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 235:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		/* The memory being freed will have an BlockLink_t structure immediately
 236:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		before it. */
 237:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		puc -= xHeapStructSize;
 238:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 239:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		/* This casting is to keep the compiler from issuing warnings. */
 240:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		pxLink = ( void * ) puc;
 241:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 242:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		/* Check the block is actually allocated. */
 243:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 244:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 245:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 246:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 )
 247:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 248:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			if( pxLink->pxNextFreeBlock == NULL )
 249:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 250:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				/* The block is being returned to the heap - it is no longer
 251:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				allocated. */
 252:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 253:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 254:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				vTaskSuspendAll();
 255:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 256:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					/* Add this block to the list of free blocks. */
 257:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					xFreeBytesRemaining += pxLink->xBlockSize;
 258:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					traceFREE( pv, pxLink->xBlockSize );
 259:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
ARM GAS  /tmp/cc43EOx7.s 			page 6


 260:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 261:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				( void ) xTaskResumeAll();
 262:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 263:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			else
 264:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 265:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				mtCOVERAGE_TEST_MARKER();
 266:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 267:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 268:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		else
 269:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 270:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			mtCOVERAGE_TEST_MARKER();
 271:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 272:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 273:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 274:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 275:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 276:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 277:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** size_t getBlockSize( void *pv )
 278:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
 279:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 280:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	uint8_t *puc = ( uint8_t * ) pv;
 281:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	BlockLink_t *pxLink;
 282:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 283:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	puc -= xHeapStructSize;
 284:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pxLink = ( void * ) puc;
 285:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 286:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	size_t count = pxLink->xBlockSize & ~xBlockAllocatedBit;
 287:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 288:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return count;
 289:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 290:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 291:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 292:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** void *pvPortReallocMicroROS( void *pv, size_t xWantedSize )
 293:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
 294:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	vTaskSuspendAll();
 295:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 296:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	void * newmem = pvPortMallocMicroROS(xWantedSize);
 297:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	if (newmem != NULL && pv != NULL)
 298:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 299:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		size_t count = getBlockSize(pv) - xHeapStructSize;
 300:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if (xWantedSize < count)
 301:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 302:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			count = xWantedSize;
 303:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 304:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		memcpy(newmem, pv, count);
 305:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 306:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		vPortFreeMicroROS(pv);
 307:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 308:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 309:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	( void ) xTaskResumeAll();
 310:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 311:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return newmem;
 312:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 313:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 314:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 315:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** void *pvPortCallocMicroROS( size_t num, size_t xWantedSize )
 316:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
ARM GAS  /tmp/cc43EOx7.s 			page 7


 317:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	vTaskSuspendAll();
 318:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	size_t count = xWantedSize*num;
 319:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 320:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	void * mem = pvPortMallocMicroROS(count);
 321:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****   	char *in_dest = (char*)mem;
 322:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 323:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****   	while(count--)
 324:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****     	*in_dest++ = 0;
 325:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 326:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	( void ) xTaskResumeAll();
 327:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****   	return mem;
 328:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 329:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 330:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 331:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** size_t xPortGetFreeHeapSizeMicroROS( void )
 332:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
 333:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return xFreeBytesRemaining;
 334:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 335:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 336:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 337:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** size_t xPortGetMinimumEverFreeHeapSizeMicroROS( void )
 338:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
 339:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return xMinimumEverFreeBytesRemaining;
 340:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 341:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 342:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 343:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** void vPortInitialiseBlocksMicroROS( void )
 344:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
 345:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* This just exists to keep the linker quiet. */
 346:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 347:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 348:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 349:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static void prvHeapInit( void )
 350:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
  28              		.loc 1 350 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 351:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** BlockLink_t *pxFirstFreeBlock;
  33              		.loc 1 351 1 view .LVU1
 352:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** uint8_t *pucAlignedHeap;
  34              		.loc 1 352 1 view .LVU2
 353:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** size_t uxAddress;
  35              		.loc 1 353 1 view .LVU3
 354:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
  36              		.loc 1 354 1 view .LVU4
  37              	.LVL0:
 355:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 356:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* Ensure the heap starts on a correctly aligned boundary. */
 357:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	uxAddress = ( size_t ) ucHeap;
  38              		.loc 1 357 2 view .LVU5
  39              		.loc 1 357 12 is_stmt 0 view .LVU6
  40 0000 124A     		ldr	r2, .L4
  41              	.LVL1:
 358:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 359:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
ARM GAS  /tmp/cc43EOx7.s 			page 8


  42              		.loc 1 359 2 is_stmt 1 view .LVU7
  43              		.loc 1 359 4 is_stmt 0 view .LVU8
  44 0002 12F0070F 		tst	r2, #7
  45 0006 1ED0     		beq	.L3
 360:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 361:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		uxAddress += ( portBYTE_ALIGNMENT - 1 );
  46              		.loc 1 361 3 is_stmt 1 view .LVU9
  47              		.loc 1 361 13 is_stmt 0 view .LVU10
  48 0008 D11D     		adds	r1, r2, #7
  49              	.LVL2:
 362:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
  50              		.loc 1 362 3 is_stmt 1 view .LVU11
  51              		.loc 1 362 13 is_stmt 0 view .LVU12
  52 000a 21F00701 		bic	r1, r1, #7
  53              	.LVL3:
 363:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
  54              		.loc 1 363 3 is_stmt 1 view .LVU13
  55              		.loc 1 363 18 is_stmt 0 view .LVU14
  56 000e C1F57053 		rsb	r3, r1, #15360
  57 0012 1344     		add	r3, r3, r2
  58              	.LVL4:
 362:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
  59              		.loc 1 362 13 view .LVU15
  60 0014 0A46     		mov	r2, r1
  61              	.LVL5:
  62              	.L2:
 364:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 365:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 366:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pucAlignedHeap = ( uint8_t * ) uxAddress;
  63              		.loc 1 366 2 is_stmt 1 view .LVU16
 367:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 368:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* xStart is used to hold a pointer to the first item in the list of free
 369:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	blocks.  The void cast is used to prevent compiler warnings. */
 370:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
  64              		.loc 1 370 2 view .LVU17
  65              		.loc 1 370 25 is_stmt 0 view .LVU18
  66 0016 0E48     		ldr	r0, .L4+4
  67 0018 0260     		str	r2, [r0]
 371:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	xStart.xBlockSize = ( size_t ) 0;
  68              		.loc 1 371 2 is_stmt 1 view .LVU19
  69              		.loc 1 371 20 is_stmt 0 view .LVU20
  70 001a 0021     		movs	r1, #0
  71 001c 4160     		str	r1, [r0, #4]
 372:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 373:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* pxEnd is used to mark the end of the list of free blocks and is inserted
 374:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	at the end of the heap space. */
 375:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
  72              		.loc 1 375 2 is_stmt 1 view .LVU21
  73              		.loc 1 375 12 is_stmt 0 view .LVU22
  74 001e 1344     		add	r3, r3, r2
  75              	.LVL6:
 376:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	uxAddress -= xHeapStructSize;
  76              		.loc 1 376 2 is_stmt 1 view .LVU23
  77              		.loc 1 376 12 is_stmt 0 view .LVU24
  78 0020 083B     		subs	r3, r3, #8
  79              	.LVL7:
 377:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
ARM GAS  /tmp/cc43EOx7.s 			page 9


  80              		.loc 1 377 2 is_stmt 1 view .LVU25
  81              		.loc 1 377 12 is_stmt 0 view .LVU26
  82 0022 23F00703 		bic	r3, r3, #7
  83              	.LVL8:
 378:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pxEnd = ( void * ) uxAddress;
  84              		.loc 1 378 2 is_stmt 1 view .LVU27
  85              		.loc 1 378 8 is_stmt 0 view .LVU28
  86 0026 0B48     		ldr	r0, .L4+8
  87 0028 0360     		str	r3, [r0]
 379:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pxEnd->xBlockSize = 0;
  88              		.loc 1 379 2 is_stmt 1 view .LVU29
  89              		.loc 1 379 20 is_stmt 0 view .LVU30
  90 002a 5960     		str	r1, [r3, #4]
 380:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pxEnd->pxNextFreeBlock = NULL;
  91              		.loc 1 380 2 is_stmt 1 view .LVU31
  92              		.loc 1 380 25 is_stmt 0 view .LVU32
  93 002c 1960     		str	r1, [r3]
 381:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 382:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* To start with there is a single free block that is sized to take up the
 383:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	entire heap space, minus the space taken by pxEnd. */
 384:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pxFirstFreeBlock = ( void * ) pucAlignedHeap;
  94              		.loc 1 384 2 is_stmt 1 view .LVU33
  95              	.LVL9:
 385:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
  96              		.loc 1 385 2 view .LVU34
  97              		.loc 1 385 43 is_stmt 0 view .LVU35
  98 002e 991A     		subs	r1, r3, r2
  99              		.loc 1 385 31 view .LVU36
 100 0030 5160     		str	r1, [r2, #4]
 386:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 101              		.loc 1 386 2 is_stmt 1 view .LVU37
 102              		.loc 1 386 36 is_stmt 0 view .LVU38
 103 0032 1360     		str	r3, [r2]
 387:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 388:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* Only one block exists - and it covers the entire usable heap space. */
 389:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 104              		.loc 1 389 2 is_stmt 1 view .LVU39
 105              		.loc 1 389 33 is_stmt 0 view .LVU40
 106 0034 084B     		ldr	r3, .L4+12
 107              	.LVL10:
 108              		.loc 1 389 33 view .LVU41
 109 0036 1960     		str	r1, [r3]
 390:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 110              		.loc 1 390 2 is_stmt 1 view .LVU42
 111              		.loc 1 390 22 is_stmt 0 view .LVU43
 112 0038 084B     		ldr	r3, .L4+16
 113 003a 1960     		str	r1, [r3]
 391:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 392:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* Work out the position of the top bit in a size_t variable. */
 393:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 114              		.loc 1 393 2 is_stmt 1 view .LVU44
 115              		.loc 1 393 21 is_stmt 0 view .LVU45
 116 003c 084B     		ldr	r3, .L4+20
 117 003e 4FF00042 		mov	r2, #-2147483648
 118              	.LVL11:
 119              		.loc 1 393 21 view .LVU46
 120 0042 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc43EOx7.s 			page 10


 394:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 121              		.loc 1 394 1 view .LVU47
 122 0044 7047     		bx	lr
 123              	.LVL12:
 124              	.L3:
 354:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 125              		.loc 1 354 8 view .LVU48
 126 0046 4FF47053 		mov	r3, #15360
 127 004a E4E7     		b	.L2
 128              	.L5:
 129              		.align	2
 130              	.L4:
 131 004c 00000000 		.word	ucHeap
 132 0050 00000000 		.word	.LANCHOR0
 133 0054 00000000 		.word	.LANCHOR1
 134 0058 00000000 		.word	.LANCHOR2
 135 005c 00000000 		.word	.LANCHOR3
 136 0060 00000000 		.word	.LANCHOR4
 137              		.cfi_endproc
 138              	.LFE12:
 140              		.section	.text.prvInsertBlockIntoFreeList,"ax",%progbits
 141              		.align	1
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv4-sp-d16
 147              	prvInsertBlockIntoFreeList:
 148              	.LVL13:
 149              	.LFB13:
 395:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 396:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 397:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
 398:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
 150              		.loc 1 398 1 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 399:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** BlockLink_t *pxIterator;
 155              		.loc 1 399 1 view .LVU50
 400:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** uint8_t *puc;
 156              		.loc 1 400 1 view .LVU51
 401:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 402:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* Iterate through the list until a block is found that has a higher address
 403:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	than the block being inserted. */
 404:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator-
 157              		.loc 1 404 2 view .LVU52
 158              		.loc 1 404 18 is_stmt 0 view .LVU53
 159 0000 164B     		ldr	r3, .L21
 160              	.LVL14:
 161              	.L7:
 162              		.loc 1 404 29 is_stmt 1 discriminator 1 view .LVU54
 163 0002 1A46     		mov	r2, r3
 164              		.loc 1 404 39 is_stmt 0 discriminator 1 view .LVU55
 165 0004 1B68     		ldr	r3, [r3]
 166              	.LVL15:
 167              		.loc 1 404 2 discriminator 1 view .LVU56
ARM GAS  /tmp/cc43EOx7.s 			page 11


 168 0006 8342     		cmp	r3, r0
 169 0008 FBD3     		bcc	.L7
 405:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 406:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		/* Nothing to do here, just iterate to the right position. */
 407:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 408:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 409:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* Do the block being inserted, and the block it is being inserted after
 410:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	make a contiguous block of memory? */
 411:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	puc = ( uint8_t * ) pxIterator;
 170              		.loc 1 411 2 is_stmt 1 view .LVU57
 171              	.LVL16:
 412:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 172              		.loc 1 412 2 view .LVU58
 173              		.loc 1 412 24 is_stmt 0 view .LVU59
 174 000a 5168     		ldr	r1, [r2, #4]
 175              		.loc 1 412 12 view .LVU60
 176 000c 02EB010C 		add	ip, r2, r1
 177              		.loc 1 412 4 view .LVU61
 178 0010 8445     		cmp	ip, r0
 179 0012 09D0     		beq	.L19
 180              	.L8:
 413:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 414:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 415:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		pxBlockToInsert = pxIterator;
 416:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 417:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	else
 418:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 419:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		mtCOVERAGE_TEST_MARKER();
 181              		.loc 1 419 27 is_stmt 1 view .LVU62
 420:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 421:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 422:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* Do the block being inserted, and the block it is being inserted before
 423:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	make a contiguous block of memory? */
 424:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	puc = ( uint8_t * ) pxBlockToInsert;
 182              		.loc 1 424 2 view .LVU63
 183              	.LVL17:
 425:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 184              		.loc 1 425 2 view .LVU64
 185              		.loc 1 425 29 is_stmt 0 view .LVU65
 186 0014 4168     		ldr	r1, [r0, #4]
 187              		.loc 1 425 12 view .LVU66
 188 0016 00EB010C 		add	ip, r0, r1
 189              		.loc 1 425 4 view .LVU67
 190 001a 6345     		cmp	r3, ip
 191 001c 09D0     		beq	.L20
 426:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 427:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if( pxIterator->pxNextFreeBlock != pxEnd )
 428:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 429:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			/* Form one big block from the two blocks. */
 430:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 431:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 432:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 433:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		else
 434:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 435:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 436:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 437:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
ARM GAS  /tmp/cc43EOx7.s 			page 12


 438:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	else
 439:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 440:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 192              		.loc 1 440 3 is_stmt 1 view .LVU68
 193              		.loc 1 440 36 is_stmt 0 view .LVU69
 194 001e 0360     		str	r3, [r0]
 441:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 442:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 443:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* If the block being inserted plugged a gab, so was merged with the block
 444:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	before and the block after, then it's pxNextFreeBlock pointer will have
 445:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	already been set, and should not be set here as that would make it point
 446:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	to itself. */
 447:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	if( pxIterator != pxBlockToInsert )
 195              		.loc 1 447 2 is_stmt 1 view .LVU70
 196              		.loc 1 447 4 is_stmt 0 view .LVU71
 197 0020 9042     		cmp	r0, r2
 198 0022 19D0     		beq	.L16
 448:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 449:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 199              		.loc 1 449 3 is_stmt 1 view .LVU72
 200              		.loc 1 449 31 is_stmt 0 view .LVU73
 201 0024 1060     		str	r0, [r2]
 450:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 451:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	else
 452:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 453:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		mtCOVERAGE_TEST_MARKER();
 202              		.loc 1 453 27 is_stmt 1 view .LVU74
 203 0026 7047     		bx	lr
 204              	.LVL18:
 205              	.L19:
 414:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		pxBlockToInsert = pxIterator;
 206              		.loc 1 414 3 view .LVU75
 414:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		pxBlockToInsert = pxIterator;
 207              		.loc 1 414 44 is_stmt 0 view .LVU76
 208 0028 4068     		ldr	r0, [r0, #4]
 209              	.LVL19:
 414:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		pxBlockToInsert = pxIterator;
 210              		.loc 1 414 26 view .LVU77
 211 002a 0144     		add	r1, r1, r0
 212 002c 5160     		str	r1, [r2, #4]
 415:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 213              		.loc 1 415 3 is_stmt 1 view .LVU78
 214              	.LVL20:
 415:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 215              		.loc 1 415 19 is_stmt 0 view .LVU79
 216 002e 1046     		mov	r0, r2
 217 0030 F0E7     		b	.L8
 218              	.LVL21:
 219              	.L20:
 398:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** BlockLink_t *pxIterator;
 220              		.loc 1 398 1 view .LVU80
 221 0032 10B4     		push	{r4}
 222              	.LCFI0:
 223              		.cfi_def_cfa_offset 4
 224              		.cfi_offset 4, -4
 427:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 225              		.loc 1 427 3 is_stmt 1 view .LVU81
ARM GAS  /tmp/cc43EOx7.s 			page 13


 427:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 226              		.loc 1 427 35 is_stmt 0 view .LVU82
 227 0034 0A4C     		ldr	r4, .L21+4
 228 0036 2468     		ldr	r4, [r4]
 427:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 229              		.loc 1 427 5 view .LVU83
 230 0038 A342     		cmp	r3, r4
 231 003a 0BD0     		beq	.L10
 430:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 232              		.loc 1 430 4 is_stmt 1 view .LVU84
 430:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 233              		.loc 1 430 62 is_stmt 0 view .LVU85
 234 003c 5B68     		ldr	r3, [r3, #4]
 430:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 235              		.loc 1 430 32 view .LVU86
 236 003e 1944     		add	r1, r1, r3
 237 0040 4160     		str	r1, [r0, #4]
 431:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 238              		.loc 1 431 4 is_stmt 1 view .LVU87
 431:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 239              		.loc 1 431 49 is_stmt 0 view .LVU88
 240 0042 1368     		ldr	r3, [r2]
 431:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 241              		.loc 1 431 66 view .LVU89
 242 0044 1B68     		ldr	r3, [r3]
 431:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 243              		.loc 1 431 37 view .LVU90
 244 0046 0360     		str	r3, [r0]
 245              	.L11:
 447:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 246              		.loc 1 447 2 is_stmt 1 view .LVU91
 447:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 247              		.loc 1 447 4 is_stmt 0 view .LVU92
 248 0048 9042     		cmp	r0, r2
 249 004a 00D0     		beq	.L6
 449:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 250              		.loc 1 449 3 is_stmt 1 view .LVU93
 449:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 251              		.loc 1 449 31 is_stmt 0 view .LVU94
 252 004c 1060     		str	r0, [r2]
 253              		.loc 1 453 27 is_stmt 1 view .LVU95
 254              	.L6:
 454:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 455:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 255              		.loc 1 455 1 is_stmt 0 view .LVU96
 256 004e 5DF8044B 		ldr	r4, [sp], #4
 257              	.LCFI1:
 258              		.cfi_remember_state
 259              		.cfi_restore 4
 260              		.cfi_def_cfa_offset 0
 261 0052 7047     		bx	lr
 262              	.L10:
 263              	.LCFI2:
 264              		.cfi_restore_state
 435:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 265              		.loc 1 435 4 is_stmt 1 view .LVU97
 435:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
ARM GAS  /tmp/cc43EOx7.s 			page 14


 266              		.loc 1 435 37 is_stmt 0 view .LVU98
 267 0054 0460     		str	r4, [r0]
 268 0056 F7E7     		b	.L11
 269              	.L16:
 270              	.LCFI3:
 271              		.cfi_def_cfa_offset 0
 272              		.cfi_restore 4
 435:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 273              		.loc 1 435 37 view .LVU99
 274 0058 7047     		bx	lr
 275              	.L22:
 276 005a 00BF     		.align	2
 277              	.L21:
 278 005c 00000000 		.word	.LANCHOR0
 279 0060 00000000 		.word	.LANCHOR1
 280              		.cfi_endproc
 281              	.LFE13:
 283              		.section	.text.pvPortMallocMicroROS,"ax",%progbits
 284              		.align	1
 285              		.global	pvPortMallocMicroROS
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 289              		.fpu fpv4-sp-d16
 291              	pvPortMallocMicroROS:
 292              	.LVL22:
 293              	.LFB4:
  79:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
 294              		.loc 1 79 1 is_stmt 1 view -0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
  79:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
 298              		.loc 1 79 1 is_stmt 0 view .LVU101
 299 0000 70B5     		push	{r4, r5, r6, lr}
 300              	.LCFI4:
 301              		.cfi_def_cfa_offset 16
 302              		.cfi_offset 4, -16
 303              		.cfi_offset 5, -12
 304              		.cfi_offset 6, -8
 305              		.cfi_offset 14, -4
 306 0002 0546     		mov	r5, r0
  80:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** void *pvReturn = NULL;
 307              		.loc 1 80 1 is_stmt 1 view .LVU102
  81:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 308              		.loc 1 81 1 view .LVU103
 309              	.LVL23:
  83:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 310              		.loc 1 83 2 view .LVU104
 311 0004 FFF7FEFF 		bl	vTaskSuspendAll
 312              	.LVL24:
  87:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 313              		.loc 1 87 3 view .LVU105
  87:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 314              		.loc 1 87 13 is_stmt 0 view .LVU106
 315 0008 344B     		ldr	r3, .L42
 316 000a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc43EOx7.s 			page 15


  87:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 317              		.loc 1 87 5 view .LVU107
 318 000c A3B1     		cbz	r3, .L41
 319              	.L24:
  93:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 320              		.loc 1 93 28 is_stmt 1 view .LVU108
 100:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 321              		.loc 1 100 3 view .LVU109
 100:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 322              		.loc 1 100 21 is_stmt 0 view .LVU110
 323 000e 344B     		ldr	r3, .L42+4
 324 0010 1B68     		ldr	r3, [r3]
 100:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 325              		.loc 1 100 5 view .LVU111
 326 0012 1D42     		tst	r5, r3
 327 0014 4AD1     		bne	.L35
 104:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 328              		.loc 1 104 4 is_stmt 1 view .LVU112
 104:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 329              		.loc 1 104 6 is_stmt 0 view .LVU113
 330 0016 35B1     		cbz	r5, .L26
 106:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 331              		.loc 1 106 5 is_stmt 1 view .LVU114
 106:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 332              		.loc 1 106 17 is_stmt 0 view .LVU115
 333 0018 0835     		adds	r5, r5, #8
 334              	.LVL25:
 110:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 335              		.loc 1 110 5 is_stmt 1 view .LVU116
 110:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 336              		.loc 1 110 7 is_stmt 0 view .LVU117
 337 001a 15F0070F 		tst	r5, #7
 338 001e 02D0     		beq	.L26
 113:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					configASSERT( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) == 0 );
 339              		.loc 1 113 6 is_stmt 1 view .LVU118
 113:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					configASSERT( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) == 0 );
 340              		.loc 1 113 18 is_stmt 0 view .LVU119
 341 0020 25F00705 		bic	r5, r5, #7
 342              	.LVL26:
 113:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					configASSERT( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) == 0 );
 343              		.loc 1 113 18 view .LVU120
 344 0024 0835     		adds	r5, r5, #8
 345              	.LVL27:
 114:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 346              		.loc 1 114 6 is_stmt 1 view .LVU121
 347              	.L26:
 123:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 348              		.loc 1 123 29 view .LVU122
 126:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 349              		.loc 1 126 4 view .LVU123
 126:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 350              		.loc 1 126 6 is_stmt 0 view .LVU124
 351 0026 002D     		cmp	r5, #0
 352 0028 42D0     		beq	.L36
 126:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 353              		.loc 1 126 45 discriminator 1 view .LVU125
 354 002a 2E4B     		ldr	r3, .L42+8
ARM GAS  /tmp/cc43EOx7.s 			page 16


 355 002c 1B68     		ldr	r3, [r3]
 126:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 356              		.loc 1 126 28 discriminator 1 view .LVU126
 357 002e AB42     		cmp	r3, r5
 358 0030 4DD3     		bcc	.L37
 130:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				pxBlock = xStart.pxNextFreeBlock;
 359              		.loc 1 130 5 is_stmt 1 view .LVU127
 360              	.LVL28:
 131:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 361              		.loc 1 131 5 view .LVU128
 131:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 362              		.loc 1 131 13 is_stmt 0 view .LVU129
 363 0032 2D4A     		ldr	r2, .L42+12
 364 0034 1468     		ldr	r4, [r2]
 365              	.LVL29:
 132:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 366              		.loc 1 132 5 is_stmt 1 view .LVU130
 132:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 367              		.loc 1 132 10 is_stmt 0 view .LVU131
 368 0036 04E0     		b	.L28
 369              	.LVL30:
 370              	.L41:
  89:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 371              		.loc 1 89 4 is_stmt 1 view .LVU132
 372 0038 FFF7FEFF 		bl	prvHeapInit
 373              	.LVL31:
 374 003c E7E7     		b	.L24
 375              	.LVL32:
 376              	.L38:
 134:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pxBlock = pxBlock->pxNextFreeBlock;
 377              		.loc 1 134 22 is_stmt 0 view .LVU133
 378 003e 2246     		mov	r2, r4
 379              	.LVL33:
 135:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 380              		.loc 1 135 14 view .LVU134
 381 0040 1C46     		mov	r4, r3
 382              	.LVL34:
 383              	.L28:
 132:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 384              		.loc 1 132 10 is_stmt 1 view .LVU135
 132:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 385              		.loc 1 132 21 is_stmt 0 view .LVU136
 386 0042 6368     		ldr	r3, [r4, #4]
 132:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 387              		.loc 1 132 10 view .LVU137
 388 0044 AB42     		cmp	r3, r5
 389 0046 02D2     		bcs	.L27
 132:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 390              		.loc 1 132 62 discriminator 1 view .LVU138
 391 0048 2368     		ldr	r3, [r4]
 132:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 392              		.loc 1 132 50 discriminator 1 view .LVU139
 393 004a 002B     		cmp	r3, #0
 394 004c F7D1     		bne	.L38
 395              	.L27:
 140:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 396              		.loc 1 140 5 is_stmt 1 view .LVU140
ARM GAS  /tmp/cc43EOx7.s 			page 17


 140:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 397              		.loc 1 140 17 is_stmt 0 view .LVU141
 398 004e 234B     		ldr	r3, .L42
 399 0050 1B68     		ldr	r3, [r3]
 140:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 400              		.loc 1 140 7 view .LVU142
 401 0052 A342     		cmp	r3, r4
 402 0054 3DD0     		beq	.L39
 144:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 403              		.loc 1 144 6 is_stmt 1 view .LVU143
 144:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 404              		.loc 1 144 61 is_stmt 0 view .LVU144
 405 0056 1668     		ldr	r6, [r2]
 144:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 406              		.loc 1 144 15 view .LVU145
 407 0058 0836     		adds	r6, r6, #8
 408              	.LVL35:
 148:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 409              		.loc 1 148 6 is_stmt 1 view .LVU146
 148:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 410              		.loc 1 148 48 is_stmt 0 view .LVU147
 411 005a 2368     		ldr	r3, [r4]
 148:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 412              		.loc 1 148 39 view .LVU148
 413 005c 1360     		str	r3, [r2]
 152:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 414              		.loc 1 152 6 is_stmt 1 view .LVU149
 152:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 415              		.loc 1 152 19 is_stmt 0 view .LVU150
 416 005e 6368     		ldr	r3, [r4, #4]
 152:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 417              		.loc 1 152 32 view .LVU151
 418 0060 5B1B     		subs	r3, r3, r5
 152:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 419              		.loc 1 152 8 view .LVU152
 420 0062 102B     		cmp	r3, #16
 421 0064 10D9     		bls	.L29
 158:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 422              		.loc 1 158 7 is_stmt 1 view .LVU153
 158:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 423              		.loc 1 158 22 is_stmt 0 view .LVU154
 424 0066 6019     		adds	r0, r4, r5
 425              	.LVL36:
 159:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 426              		.loc 1 159 7 is_stmt 1 view .LVU155
 427 0068 10F0070F 		tst	r0, #7
 428 006c 08D0     		beq	.L30
 159:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 429              		.loc 1 159 7 view .LVU156
 430              	.LBB12:
 431              	.LBI12:
 432              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
ARM GAS  /tmp/cc43EOx7.s 			page 18


   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
ARM GAS  /tmp/cc43EOx7.s 			page 19


  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
ARM GAS  /tmp/cc43EOx7.s 			page 20


 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/cc43EOx7.s 			page 21


 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 433              		.loc 2 191 30 view .LVU157
 434              	.LBB13:
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 435              		.loc 2 193 1 view .LVU158
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 436              		.loc 2 195 2 view .LVU159
 437              		.syntax unified
 438              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 439 006e 4FF05003 			mov r3, #80												
 440 0072 83F31188 		msr basepri, r3											
 441 0076 BFF36F8F 		isb														
 442 007a BFF34F8F 		dsb														
 443              	
 444              	@ 0 "" 2
 445              	.LVL37:
 446              		.thumb
 447              		.syntax unified
 448              	.L31:
 449              		.loc 2 195 2 is_stmt 0 view .LVU160
 450              	.LBE13:
 451              	.LBE12:
 159:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 452              		.loc 1 159 7 is_stmt 1 discriminator 3 view .LVU161
 159:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 453              		.loc 1 159 7 discriminator 3 view .LVU162
 159:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 454              		.loc 1 159 7 discriminator 3 view .LVU163
 455 007e FEE7     		b	.L31
 456              	.L30:
 159:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 457              		.loc 1 159 87 discriminator 2 view .LVU164
 163:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						pxBlock->xBlockSize = xWantedSize;
 458              		.loc 1 163 7 discriminator 2 view .LVU165
 163:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						pxBlock->xBlockSize = xWantedSize;
 459              		.loc 1 163 34 is_stmt 0 discriminator 2 view .LVU166
 460 0080 4360     		str	r3, [r0, #4]
 164:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 461              		.loc 1 164 7 is_stmt 1 discriminator 2 view .LVU167
 164:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 462              		.loc 1 164 27 is_stmt 0 discriminator 2 view .LVU168
ARM GAS  /tmp/cc43EOx7.s 			page 22


 463 0082 6560     		str	r5, [r4, #4]
 167:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 464              		.loc 1 167 7 is_stmt 1 discriminator 2 view .LVU169
 465 0084 FFF7FEFF 		bl	prvInsertBlockIntoFreeList
 466              	.LVL38:
 467              	.L29:
 171:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 468              		.loc 1 171 31 view .LVU170
 174:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 469              		.loc 1 174 6 view .LVU171
 174:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 470              		.loc 1 174 36 is_stmt 0 view .LVU172
 471 0088 6268     		ldr	r2, [r4, #4]
 174:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 472              		.loc 1 174 26 view .LVU173
 473 008a 1649     		ldr	r1, .L42+8
 474 008c 0B68     		ldr	r3, [r1]
 475 008e 9B1A     		subs	r3, r3, r2
 476 0090 0B60     		str	r3, [r1]
 176:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 477              		.loc 1 176 6 is_stmt 1 view .LVU174
 176:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 478              		.loc 1 176 30 is_stmt 0 view .LVU175
 479 0092 1649     		ldr	r1, .L42+16
 480 0094 0968     		ldr	r1, [r1]
 176:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 481              		.loc 1 176 8 view .LVU176
 482 0096 8B42     		cmp	r3, r1
 483 0098 01D2     		bcs	.L32
 178:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 484              		.loc 1 178 7 is_stmt 1 view .LVU177
 178:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 485              		.loc 1 178 38 is_stmt 0 view .LVU178
 486 009a 1449     		ldr	r1, .L42+16
 487 009c 0B60     		str	r3, [r1]
 488              	.L32:
 182:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 489              		.loc 1 182 31 is_stmt 1 view .LVU179
 187:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pxBlock->pxNextFreeBlock = NULL;
 490              		.loc 1 187 6 view .LVU180
 187:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pxBlock->pxNextFreeBlock = NULL;
 491              		.loc 1 187 26 is_stmt 0 view .LVU181
 492 009e 104B     		ldr	r3, .L42+4
 493 00a0 1B68     		ldr	r3, [r3]
 494 00a2 1343     		orrs	r3, r3, r2
 495 00a4 6360     		str	r3, [r4, #4]
 188:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 496              		.loc 1 188 6 is_stmt 1 view .LVU182
 188:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 497              		.loc 1 188 31 is_stmt 0 view .LVU183
 498 00a6 0023     		movs	r3, #0
 499 00a8 2360     		str	r3, [r4]
 500 00aa 02E0     		b	.L25
 501              	.LVL39:
 502              	.L35:
  81:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 503              		.loc 1 81 7 view .LVU184
ARM GAS  /tmp/cc43EOx7.s 			page 23


 504 00ac 0026     		movs	r6, #0
 505 00ae 00E0     		b	.L25
 506              	.L36:
  81:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 507              		.loc 1 81 7 view .LVU185
 508 00b0 0026     		movs	r6, #0
 509              	.LVL40:
 510              	.L25:
 202:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 511              		.loc 1 202 28 is_stmt 1 view .LVU186
 205:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 512              		.loc 1 205 39 view .LVU187
 207:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 513              		.loc 1 207 2 view .LVU188
 207:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 514              		.loc 1 207 11 is_stmt 0 view .LVU189
 515 00b2 FFF7FEFF 		bl	xTaskResumeAll
 516              	.LVL41:
 223:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return pvReturn;
 517              		.loc 1 223 2 is_stmt 1 view .LVU190
 518 00b6 16F0070F 		tst	r6, #7
 519 00ba 0CD0     		beq	.L23
 223:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return pvReturn;
 520              		.loc 1 223 2 view .LVU191
 521              	.LBB14:
 522              	.LBI14:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 523              		.loc 2 191 30 view .LVU192
 524              	.LBB15:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 525              		.loc 2 193 1 view .LVU193
 526              		.loc 2 195 2 view .LVU194
 527              		.syntax unified
 528              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 529 00bc 4FF05003 			mov r3, #80												
 530 00c0 83F31188 		msr basepri, r3											
 531 00c4 BFF36F8F 		isb														
 532 00c8 BFF34F8F 		dsb														
 533              	
 534              	@ 0 "" 2
 535              	.LVL42:
 536              		.thumb
 537              		.syntax unified
 538              	.L34:
 539              		.loc 2 195 2 is_stmt 0 view .LVU195
 540              	.LBE15:
 541              	.LBE14:
 223:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return pvReturn;
 542              		.loc 1 223 2 is_stmt 1 discriminator 5 view .LVU196
 223:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return pvReturn;
 543              		.loc 1 223 2 discriminator 5 view .LVU197
 223:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return pvReturn;
 544              		.loc 1 223 2 discriminator 5 view .LVU198
 545 00cc FEE7     		b	.L34
 546              	.LVL43:
 547              	.L37:
  81:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
ARM GAS  /tmp/cc43EOx7.s 			page 24


 548              		.loc 1 81 7 is_stmt 0 view .LVU199
 549 00ce 0026     		movs	r6, #0
 550 00d0 EFE7     		b	.L25
 551              	.LVL44:
 552              	.L39:
  81:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 553              		.loc 1 81 7 view .LVU200
 554 00d2 0026     		movs	r6, #0
 555 00d4 EDE7     		b	.L25
 556              	.LVL45:
 557              	.L23:
 225:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 558              		.loc 1 225 1 view .LVU201
 559 00d6 3046     		mov	r0, r6
 560 00d8 70BD     		pop	{r4, r5, r6, pc}
 561              	.LVL46:
 562              	.L43:
 225:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 563              		.loc 1 225 1 view .LVU202
 564 00da 00BF     		.align	2
 565              	.L42:
 566 00dc 00000000 		.word	.LANCHOR1
 567 00e0 00000000 		.word	.LANCHOR4
 568 00e4 00000000 		.word	.LANCHOR3
 569 00e8 00000000 		.word	.LANCHOR0
 570 00ec 00000000 		.word	.LANCHOR2
 571              		.cfi_endproc
 572              	.LFE4:
 574              		.section	.text.vPortFreeMicroROS,"ax",%progbits
 575              		.align	1
 576              		.global	vPortFreeMicroROS
 577              		.syntax unified
 578              		.thumb
 579              		.thumb_func
 580              		.fpu fpv4-sp-d16
 582              	vPortFreeMicroROS:
 583              	.LVL47:
 584              	.LFB5:
 229:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** uint8_t *puc = ( uint8_t * ) pv;
 585              		.loc 1 229 1 is_stmt 1 view -0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 230:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** BlockLink_t *pxLink;
 589              		.loc 1 230 1 view .LVU204
 231:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 590              		.loc 1 231 1 view .LVU205
 233:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 591              		.loc 1 233 2 view .LVU206
 233:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 592              		.loc 1 233 4 is_stmt 0 view .LVU207
 593 0000 80B3     		cbz	r0, .L51
 229:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** uint8_t *puc = ( uint8_t * ) pv;
 594              		.loc 1 229 1 view .LVU208
 595 0002 38B5     		push	{r3, r4, r5, lr}
 596              	.LCFI5:
 597              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cc43EOx7.s 			page 25


 598              		.cfi_offset 3, -16
 599              		.cfi_offset 4, -12
 600              		.cfi_offset 5, -8
 601              		.cfi_offset 14, -4
 602 0004 0446     		mov	r4, r0
 237:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 603              		.loc 1 237 3 is_stmt 1 view .LVU209
 237:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 604              		.loc 1 237 7 is_stmt 0 view .LVU210
 605 0006 A0F10805 		sub	r5, r0, #8
 606              	.LVL48:
 240:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 607              		.loc 1 240 3 is_stmt 1 view .LVU211
 243:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 608              		.loc 1 243 3 view .LVU212
 609 000a 50F8043C 		ldr	r3, [r0, #-4]
 610 000e 164A     		ldr	r2, .L54
 611 0010 1268     		ldr	r2, [r2]
 612 0012 1342     		tst	r3, r2
 613 0014 08D1     		bne	.L46
 243:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 614              		.loc 1 243 3 view .LVU213
 615              	.LBB16:
 616              	.LBI16:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 617              		.loc 2 191 30 view .LVU214
 618              	.LBB17:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 619              		.loc 2 193 1 view .LVU215
 620              		.loc 2 195 2 view .LVU216
 621              		.syntax unified
 622              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 623 0016 4FF05003 			mov r3, #80												
 624 001a 83F31188 		msr basepri, r3											
 625 001e BFF36F8F 		isb														
 626 0022 BFF34F8F 		dsb														
 627              	
 628              	@ 0 "" 2
 629              	.LVL49:
 630              		.thumb
 631              		.syntax unified
 632              	.L47:
 633              		.loc 2 195 2 is_stmt 0 view .LVU217
 634              	.LBE17:
 635              	.LBE16:
 243:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 636              		.loc 1 243 3 is_stmt 1 discriminator 1 view .LVU218
 243:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 637              		.loc 1 243 3 discriminator 1 view .LVU219
 243:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 638              		.loc 1 243 3 discriminator 1 view .LVU220
 639 0026 FEE7     		b	.L47
 640              	.L46:
 243:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 641              		.loc 1 243 67 discriminator 2 view .LVU221
 244:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 642              		.loc 1 244 3 discriminator 2 view .LVU222
ARM GAS  /tmp/cc43EOx7.s 			page 26


 643 0028 50F8081C 		ldr	r1, [r0, #-8]
 644 002c 41B1     		cbz	r1, .L48
 244:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 645              		.loc 1 244 3 view .LVU223
 646              	.LBB18:
 647              	.LBI18:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 648              		.loc 2 191 30 view .LVU224
 649              	.LBB19:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 650              		.loc 2 193 1 view .LVU225
 651              		.loc 2 195 2 view .LVU226
 652              		.syntax unified
 653              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 654 002e 4FF05003 			mov r3, #80												
 655 0032 83F31188 		msr basepri, r3											
 656 0036 BFF36F8F 		isb														
 657 003a BFF34F8F 		dsb														
 658              	
 659              	@ 0 "" 2
 660              	.LVL50:
 661              		.thumb
 662              		.syntax unified
 663              	.L49:
 664              		.loc 2 195 2 is_stmt 0 view .LVU227
 665              	.LBE19:
 666              	.LBE18:
 244:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 667              		.loc 1 244 3 is_stmt 1 discriminator 2 view .LVU228
 244:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 668              		.loc 1 244 3 discriminator 2 view .LVU229
 244:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 669              		.loc 1 244 3 discriminator 2 view .LVU230
 670 003e FEE7     		b	.L49
 671              	.L48:
 244:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 672              		.loc 1 244 50 view .LVU231
 246:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 673              		.loc 1 246 3 view .LVU232
 248:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 674              		.loc 1 248 4 view .LVU233
 252:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 675              		.loc 1 252 5 view .LVU234
 252:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 676              		.loc 1 252 24 is_stmt 0 view .LVU235
 677 0040 23EA0203 		bic	r3, r3, r2
 678 0044 40F8043C 		str	r3, [r0, #-4]
 254:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 679              		.loc 1 254 5 is_stmt 1 view .LVU236
 680 0048 FFF7FEFF 		bl	vTaskSuspendAll
 681              	.LVL51:
 257:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					traceFREE( pv, pxLink->xBlockSize );
 682              		.loc 1 257 6 view .LVU237
 257:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					traceFREE( pv, pxLink->xBlockSize );
 683              		.loc 1 257 35 is_stmt 0 view .LVU238
 684 004c 54F8041C 		ldr	r1, [r4, #-4]
 257:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					traceFREE( pv, pxLink->xBlockSize );
ARM GAS  /tmp/cc43EOx7.s 			page 27


 685              		.loc 1 257 26 view .LVU239
 686 0050 064A     		ldr	r2, .L54+4
 687 0052 1368     		ldr	r3, [r2]
 688 0054 0B44     		add	r3, r3, r1
 689 0056 1360     		str	r3, [r2]
 258:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 690              		.loc 1 258 41 is_stmt 1 view .LVU240
 259:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 691              		.loc 1 259 6 view .LVU241
 692 0058 2846     		mov	r0, r5
 693 005a FFF7FEFF 		bl	prvInsertBlockIntoFreeList
 694              	.LVL52:
 261:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 695              		.loc 1 261 5 view .LVU242
 261:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 696              		.loc 1 261 14 is_stmt 0 view .LVU243
 697 005e FFF7FEFF 		bl	xTaskResumeAll
 698              	.LVL53:
 270:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 699              		.loc 1 270 28 is_stmt 1 view .LVU244
 273:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 700              		.loc 1 273 1 is_stmt 0 view .LVU245
 701 0062 38BD     		pop	{r3, r4, r5, pc}
 702              	.LVL54:
 703              	.L51:
 704              	.LCFI6:
 705              		.cfi_def_cfa_offset 0
 706              		.cfi_restore 3
 707              		.cfi_restore 4
 708              		.cfi_restore 5
 709              		.cfi_restore 14
 273:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 710              		.loc 1 273 1 view .LVU246
 711 0064 7047     		bx	lr
 712              	.L55:
 713 0066 00BF     		.align	2
 714              	.L54:
 715 0068 00000000 		.word	.LANCHOR4
 716 006c 00000000 		.word	.LANCHOR3
 717              		.cfi_endproc
 718              	.LFE5:
 720              		.section	.text.getBlockSize,"ax",%progbits
 721              		.align	1
 722              		.global	getBlockSize
 723              		.syntax unified
 724              		.thumb
 725              		.thumb_func
 726              		.fpu fpv4-sp-d16
 728              	getBlockSize:
 729              	.LVL55:
 730              	.LFB6:
 278:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 731              		.loc 1 278 1 is_stmt 1 view -0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 0
 734              		@ frame_needed = 0, uses_anonymous_args = 0
 735              		@ link register save eliminated.
ARM GAS  /tmp/cc43EOx7.s 			page 28


 280:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	BlockLink_t *pxLink;
 736              		.loc 1 280 2 view .LVU248
 281:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 737              		.loc 1 281 2 view .LVU249
 283:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pxLink = ( void * ) puc;
 738              		.loc 1 283 2 view .LVU250
 284:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 739              		.loc 1 284 2 view .LVU251
 286:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 740              		.loc 1 286 2 view .LVU252
 286:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 741              		.loc 1 286 23 is_stmt 0 view .LVU253
 742 0000 50F8043C 		ldr	r3, [r0, #-4]
 286:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 743              		.loc 1 286 38 view .LVU254
 744 0004 024A     		ldr	r2, .L57
 745 0006 1068     		ldr	r0, [r2]
 746              	.LVL56:
 288:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 747              		.loc 1 288 2 is_stmt 1 view .LVU255
 289:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 748              		.loc 1 289 1 is_stmt 0 view .LVU256
 749 0008 23EA0000 		bic	r0, r3, r0
 750              	.LVL57:
 289:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 751              		.loc 1 289 1 view .LVU257
 752 000c 7047     		bx	lr
 753              	.L58:
 754 000e 00BF     		.align	2
 755              	.L57:
 756 0010 00000000 		.word	.LANCHOR4
 757              		.cfi_endproc
 758              	.LFE6:
 760              		.section	.text.pvPortReallocMicroROS,"ax",%progbits
 761              		.align	1
 762              		.global	pvPortReallocMicroROS
 763              		.syntax unified
 764              		.thumb
 765              		.thumb_func
 766              		.fpu fpv4-sp-d16
 768              	pvPortReallocMicroROS:
 769              	.LVL58:
 770              	.LFB7:
 293:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	vTaskSuspendAll();
 771              		.loc 1 293 1 is_stmt 1 view -0
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 0
 774              		@ frame_needed = 0, uses_anonymous_args = 0
 293:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	vTaskSuspendAll();
 775              		.loc 1 293 1 is_stmt 0 view .LVU259
 776 0000 70B5     		push	{r4, r5, r6, lr}
 777              	.LCFI7:
 778              		.cfi_def_cfa_offset 16
 779              		.cfi_offset 4, -16
 780              		.cfi_offset 5, -12
 781              		.cfi_offset 6, -8
 782              		.cfi_offset 14, -4
ARM GAS  /tmp/cc43EOx7.s 			page 29


 783 0002 0546     		mov	r5, r0
 784 0004 0C46     		mov	r4, r1
 294:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 785              		.loc 1 294 2 is_stmt 1 view .LVU260
 786 0006 FFF7FEFF 		bl	vTaskSuspendAll
 787              	.LVL59:
 296:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	if (newmem != NULL && pv != NULL)
 788              		.loc 1 296 2 view .LVU261
 296:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	if (newmem != NULL && pv != NULL)
 789              		.loc 1 296 18 is_stmt 0 view .LVU262
 790 000a 2046     		mov	r0, r4
 791 000c FFF7FEFF 		bl	pvPortMallocMicroROS
 792              	.LVL60:
 297:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 793              		.loc 1 297 2 is_stmt 1 view .LVU263
 297:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 794              		.loc 1 297 5 is_stmt 0 view .LVU264
 795 0010 0646     		mov	r6, r0
 796 0012 78B1     		cbz	r0, .L60
 297:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 797              		.loc 1 297 21 discriminator 1 view .LVU265
 798 0014 75B1     		cbz	r5, .L60
 799              	.LBB20:
 299:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if (xWantedSize < count)
 800              		.loc 1 299 3 is_stmt 1 view .LVU266
 299:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if (xWantedSize < count)
 801              		.loc 1 299 18 is_stmt 0 view .LVU267
 802 0016 2846     		mov	r0, r5
 803              	.LVL61:
 299:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if (xWantedSize < count)
 804              		.loc 1 299 18 view .LVU268
 805 0018 FFF7FEFF 		bl	getBlockSize
 806              	.LVL62:
 299:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if (xWantedSize < count)
 807              		.loc 1 299 10 view .LVU269
 808 001c 0838     		subs	r0, r0, #8
 809              	.LVL63:
 300:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 810              		.loc 1 300 3 is_stmt 1 view .LVU270
 300:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 811              		.loc 1 300 6 is_stmt 0 view .LVU271
 812 001e 8442     		cmp	r4, r0
 813 0020 00D3     		bcc	.L61
 299:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if (xWantedSize < count)
 814              		.loc 1 299 10 view .LVU272
 815 0022 0446     		mov	r4, r0
 816              	.LVL64:
 817              	.L61:
 304:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 818              		.loc 1 304 3 is_stmt 1 view .LVU273
 819 0024 2246     		mov	r2, r4
 820 0026 2946     		mov	r1, r5
 821 0028 3046     		mov	r0, r6
 822 002a FFF7FEFF 		bl	memcpy
 823              	.LVL65:
 306:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 824              		.loc 1 306 3 view .LVU274
ARM GAS  /tmp/cc43EOx7.s 			page 30


 825 002e 2846     		mov	r0, r5
 826 0030 FFF7FEFF 		bl	vPortFreeMicroROS
 827              	.LVL66:
 828              	.L60:
 306:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 829              		.loc 1 306 3 is_stmt 0 view .LVU275
 830              	.LBE20:
 309:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 831              		.loc 1 309 2 is_stmt 1 view .LVU276
 309:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 832              		.loc 1 309 11 is_stmt 0 view .LVU277
 833 0034 FFF7FEFF 		bl	xTaskResumeAll
 834              	.LVL67:
 311:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 835              		.loc 1 311 2 is_stmt 1 view .LVU278
 312:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 836              		.loc 1 312 1 is_stmt 0 view .LVU279
 837 0038 3046     		mov	r0, r6
 838 003a 70BD     		pop	{r4, r5, r6, pc}
 312:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 839              		.loc 1 312 1 view .LVU280
 840              		.cfi_endproc
 841              	.LFE7:
 843              		.section	.text.pvPortCallocMicroROS,"ax",%progbits
 844              		.align	1
 845              		.global	pvPortCallocMicroROS
 846              		.syntax unified
 847              		.thumb
 848              		.thumb_func
 849              		.fpu fpv4-sp-d16
 851              	pvPortCallocMicroROS:
 852              	.LVL68:
 853              	.LFB8:
 316:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	vTaskSuspendAll();
 854              		.loc 1 316 1 is_stmt 1 view -0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 0
 857              		@ frame_needed = 0, uses_anonymous_args = 0
 316:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	vTaskSuspendAll();
 858              		.loc 1 316 1 is_stmt 0 view .LVU282
 859 0000 38B5     		push	{r3, r4, r5, lr}
 860              	.LCFI8:
 861              		.cfi_def_cfa_offset 16
 862              		.cfi_offset 3, -16
 863              		.cfi_offset 4, -12
 864              		.cfi_offset 5, -8
 865              		.cfi_offset 14, -4
 866 0002 0546     		mov	r5, r0
 867 0004 0C46     		mov	r4, r1
 317:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	size_t count = xWantedSize*num;
 868              		.loc 1 317 2 is_stmt 1 view .LVU283
 869 0006 FFF7FEFF 		bl	vTaskSuspendAll
 870              	.LVL69:
 318:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 871              		.loc 1 318 2 view .LVU284
 318:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 872              		.loc 1 318 9 is_stmt 0 view .LVU285
ARM GAS  /tmp/cc43EOx7.s 			page 31


 873 000a 05FB04F4 		mul	r4, r5, r4
 874              	.LVL70:
 320:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****   	char *in_dest = (char*)mem;
 875              		.loc 1 320 2 is_stmt 1 view .LVU286
 320:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****   	char *in_dest = (char*)mem;
 876              		.loc 1 320 15 is_stmt 0 view .LVU287
 877 000e 2046     		mov	r0, r4
 878 0010 FFF7FEFF 		bl	pvPortMallocMicroROS
 879              	.LVL71:
 880 0014 0546     		mov	r5, r0
 881              	.LVL72:
 321:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 882              		.loc 1 321 4 is_stmt 1 view .LVU288
 323:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****     	*in_dest++ = 0;
 883              		.loc 1 323 4 view .LVU289
 321:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 884              		.loc 1 321 10 is_stmt 0 view .LVU290
 885 0016 0346     		mov	r3, r0
 323:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****     	*in_dest++ = 0;
 886              		.loc 1 323 9 view .LVU291
 887 0018 03E0     		b	.L64
 888              	.LVL73:
 889              	.L65:
 324:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 890              		.loc 1 324 6 is_stmt 1 view .LVU292
 324:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 891              		.loc 1 324 17 is_stmt 0 view .LVU293
 892 001a 0021     		movs	r1, #0
 893 001c 03F8011B 		strb	r1, [r3], #1
 894              	.LVL74:
 323:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****     	*in_dest++ = 0;
 895              		.loc 1 323 15 view .LVU294
 896 0020 1446     		mov	r4, r2
 897              	.LVL75:
 898              	.L64:
 323:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****     	*in_dest++ = 0;
 899              		.loc 1 323 9 is_stmt 1 view .LVU295
 323:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****     	*in_dest++ = 0;
 900              		.loc 1 323 15 is_stmt 0 view .LVU296
 901 0022 621E     		subs	r2, r4, #1
 902              	.LVL76:
 323:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****     	*in_dest++ = 0;
 903              		.loc 1 323 9 view .LVU297
 904 0024 002C     		cmp	r4, #0
 905 0026 F8D1     		bne	.L65
 326:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****   	return mem;
 906              		.loc 1 326 2 is_stmt 1 view .LVU298
 326:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****   	return mem;
 907              		.loc 1 326 11 is_stmt 0 view .LVU299
 908 0028 FFF7FEFF 		bl	xTaskResumeAll
 909              	.LVL77:
 327:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 910              		.loc 1 327 4 is_stmt 1 view .LVU300
 328:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 911              		.loc 1 328 1 is_stmt 0 view .LVU301
 912 002c 2846     		mov	r0, r5
 913 002e 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/cc43EOx7.s 			page 32


 328:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 914              		.loc 1 328 1 view .LVU302
 915              		.cfi_endproc
 916              	.LFE8:
 918              		.section	.text.xPortGetFreeHeapSizeMicroROS,"ax",%progbits
 919              		.align	1
 920              		.global	xPortGetFreeHeapSizeMicroROS
 921              		.syntax unified
 922              		.thumb
 923              		.thumb_func
 924              		.fpu fpv4-sp-d16
 926              	xPortGetFreeHeapSizeMicroROS:
 927              	.LFB9:
 332:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return xFreeBytesRemaining;
 928              		.loc 1 332 1 is_stmt 1 view -0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 0
 931              		@ frame_needed = 0, uses_anonymous_args = 0
 932              		@ link register save eliminated.
 333:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 933              		.loc 1 333 2 view .LVU304
 334:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 934              		.loc 1 334 1 is_stmt 0 view .LVU305
 935 0000 014B     		ldr	r3, .L68
 936 0002 1868     		ldr	r0, [r3]
 937 0004 7047     		bx	lr
 938              	.L69:
 939 0006 00BF     		.align	2
 940              	.L68:
 941 0008 00000000 		.word	.LANCHOR3
 942              		.cfi_endproc
 943              	.LFE9:
 945              		.section	.text.xPortGetMinimumEverFreeHeapSizeMicroROS,"ax",%progbits
 946              		.align	1
 947              		.global	xPortGetMinimumEverFreeHeapSizeMicroROS
 948              		.syntax unified
 949              		.thumb
 950              		.thumb_func
 951              		.fpu fpv4-sp-d16
 953              	xPortGetMinimumEverFreeHeapSizeMicroROS:
 954              	.LFB10:
 338:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return xMinimumEverFreeBytesRemaining;
 955              		.loc 1 338 1 is_stmt 1 view -0
 956              		.cfi_startproc
 957              		@ args = 0, pretend = 0, frame = 0
 958              		@ frame_needed = 0, uses_anonymous_args = 0
 959              		@ link register save eliminated.
 339:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 960              		.loc 1 339 2 view .LVU307
 340:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 961              		.loc 1 340 1 is_stmt 0 view .LVU308
 962 0000 014B     		ldr	r3, .L71
 963 0002 1868     		ldr	r0, [r3]
 964 0004 7047     		bx	lr
 965              	.L72:
 966 0006 00BF     		.align	2
 967              	.L71:
ARM GAS  /tmp/cc43EOx7.s 			page 33


 968 0008 00000000 		.word	.LANCHOR2
 969              		.cfi_endproc
 970              	.LFE10:
 972              		.section	.text.vPortInitialiseBlocksMicroROS,"ax",%progbits
 973              		.align	1
 974              		.global	vPortInitialiseBlocksMicroROS
 975              		.syntax unified
 976              		.thumb
 977              		.thumb_func
 978              		.fpu fpv4-sp-d16
 980              	vPortInitialiseBlocksMicroROS:
 981              	.LFB11:
 344:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* This just exists to keep the linker quiet. */
 982              		.loc 1 344 1 is_stmt 1 view -0
 983              		.cfi_startproc
 984              		@ args = 0, pretend = 0, frame = 0
 985              		@ frame_needed = 0, uses_anonymous_args = 0
 986              		@ link register save eliminated.
 346:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 987              		.loc 1 346 1 view .LVU310
 988 0000 7047     		bx	lr
 989              		.cfi_endproc
 990              	.LFE11:
 992              		.section	.bss.pxEnd,"aw",%nobits
 993              		.align	2
 994              		.set	.LANCHOR1,. + 0
 997              	pxEnd:
 998 0000 00000000 		.space	4
 999              		.section	.bss.ucHeap,"aw",%nobits
 1000              		.align	2
 1003              	ucHeap:
 1004 0000 00000000 		.space	15360
 1004      00000000 
 1004      00000000 
 1004      00000000 
 1004      00000000 
 1005              		.section	.bss.xBlockAllocatedBit,"aw",%nobits
 1006              		.align	2
 1007              		.set	.LANCHOR4,. + 0
 1010              	xBlockAllocatedBit:
 1011 0000 00000000 		.space	4
 1012              		.section	.bss.xFreeBytesRemaining,"aw",%nobits
 1013              		.align	2
 1014              		.set	.LANCHOR3,. + 0
 1017              	xFreeBytesRemaining:
 1018 0000 00000000 		.space	4
 1019              		.section	.bss.xMinimumEverFreeBytesRemaining,"aw",%nobits
 1020              		.align	2
 1021              		.set	.LANCHOR2,. + 0
 1024              	xMinimumEverFreeBytesRemaining:
 1025 0000 00000000 		.space	4
 1026              		.section	.bss.xStart,"aw",%nobits
 1027              		.align	2
 1028              		.set	.LANCHOR0,. + 0
 1031              	xStart:
 1032 0000 00000000 		.space	8
 1032      00000000 
ARM GAS  /tmp/cc43EOx7.s 			page 34


 1033              		.text
 1034              	.Letext0:
 1035              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 1036              		.file 4 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 1037              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1038              		.file 6 "<built-in>"
ARM GAS  /tmp/cc43EOx7.s 			page 35


DEFINED SYMBOLS
                            *ABS*:0000000000000000 custom_memory_manager.c
     /tmp/cc43EOx7.s:18     .text.prvHeapInit:0000000000000000 $t
     /tmp/cc43EOx7.s:25     .text.prvHeapInit:0000000000000000 prvHeapInit
     /tmp/cc43EOx7.s:131    .text.prvHeapInit:000000000000004c $d
     /tmp/cc43EOx7.s:1003   .bss.ucHeap:0000000000000000 ucHeap
     /tmp/cc43EOx7.s:141    .text.prvInsertBlockIntoFreeList:0000000000000000 $t
     /tmp/cc43EOx7.s:147    .text.prvInsertBlockIntoFreeList:0000000000000000 prvInsertBlockIntoFreeList
     /tmp/cc43EOx7.s:278    .text.prvInsertBlockIntoFreeList:000000000000005c $d
     /tmp/cc43EOx7.s:284    .text.pvPortMallocMicroROS:0000000000000000 $t
     /tmp/cc43EOx7.s:291    .text.pvPortMallocMicroROS:0000000000000000 pvPortMallocMicroROS
     /tmp/cc43EOx7.s:566    .text.pvPortMallocMicroROS:00000000000000dc $d
     /tmp/cc43EOx7.s:575    .text.vPortFreeMicroROS:0000000000000000 $t
     /tmp/cc43EOx7.s:582    .text.vPortFreeMicroROS:0000000000000000 vPortFreeMicroROS
     /tmp/cc43EOx7.s:715    .text.vPortFreeMicroROS:0000000000000068 $d
     /tmp/cc43EOx7.s:721    .text.getBlockSize:0000000000000000 $t
     /tmp/cc43EOx7.s:728    .text.getBlockSize:0000000000000000 getBlockSize
     /tmp/cc43EOx7.s:756    .text.getBlockSize:0000000000000010 $d
     /tmp/cc43EOx7.s:761    .text.pvPortReallocMicroROS:0000000000000000 $t
     /tmp/cc43EOx7.s:768    .text.pvPortReallocMicroROS:0000000000000000 pvPortReallocMicroROS
     /tmp/cc43EOx7.s:844    .text.pvPortCallocMicroROS:0000000000000000 $t
     /tmp/cc43EOx7.s:851    .text.pvPortCallocMicroROS:0000000000000000 pvPortCallocMicroROS
     /tmp/cc43EOx7.s:919    .text.xPortGetFreeHeapSizeMicroROS:0000000000000000 $t
     /tmp/cc43EOx7.s:926    .text.xPortGetFreeHeapSizeMicroROS:0000000000000000 xPortGetFreeHeapSizeMicroROS
     /tmp/cc43EOx7.s:941    .text.xPortGetFreeHeapSizeMicroROS:0000000000000008 $d
     /tmp/cc43EOx7.s:946    .text.xPortGetMinimumEverFreeHeapSizeMicroROS:0000000000000000 $t
     /tmp/cc43EOx7.s:953    .text.xPortGetMinimumEverFreeHeapSizeMicroROS:0000000000000000 xPortGetMinimumEverFreeHeapSizeMicroROS
     /tmp/cc43EOx7.s:968    .text.xPortGetMinimumEverFreeHeapSizeMicroROS:0000000000000008 $d
     /tmp/cc43EOx7.s:973    .text.vPortInitialiseBlocksMicroROS:0000000000000000 $t
     /tmp/cc43EOx7.s:980    .text.vPortInitialiseBlocksMicroROS:0000000000000000 vPortInitialiseBlocksMicroROS
     /tmp/cc43EOx7.s:993    .bss.pxEnd:0000000000000000 $d
     /tmp/cc43EOx7.s:997    .bss.pxEnd:0000000000000000 pxEnd
     /tmp/cc43EOx7.s:1000   .bss.ucHeap:0000000000000000 $d
     /tmp/cc43EOx7.s:1006   .bss.xBlockAllocatedBit:0000000000000000 $d
     /tmp/cc43EOx7.s:1010   .bss.xBlockAllocatedBit:0000000000000000 xBlockAllocatedBit
     /tmp/cc43EOx7.s:1013   .bss.xFreeBytesRemaining:0000000000000000 $d
     /tmp/cc43EOx7.s:1017   .bss.xFreeBytesRemaining:0000000000000000 xFreeBytesRemaining
     /tmp/cc43EOx7.s:1020   .bss.xMinimumEverFreeBytesRemaining:0000000000000000 $d
     /tmp/cc43EOx7.s:1024   .bss.xMinimumEverFreeBytesRemaining:0000000000000000 xMinimumEverFreeBytesRemaining
     /tmp/cc43EOx7.s:1027   .bss.xStart:0000000000000000 $d
     /tmp/cc43EOx7.s:1031   .bss.xStart:0000000000000000 xStart

UNDEFINED SYMBOLS
vTaskSuspendAll
xTaskResumeAll
memcpy
